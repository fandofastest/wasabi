import validateFilterResult from '../_helper/validateFilterResult'
import FullStaticSearch from '../../src/FullStaticSearch'

describe('filter.boolean', () => {
  it('should return when match', () => {
    const list = [{ sith: true }]
    const results = new FullStaticSearch(list).filter('sith')

    validateFilterResult(list, [0], results)
  })

  it('should not return when contains', () => {
    const list = [{ sith: true }]
    const results = new FullStaticSearch(list).filter('ith')

    validateFilterResult(list, [], results)
  })

  it('should not return when starts', () => {
    const list = [{ sith: true }]
    const results = new FullStaticSearch(list).filter('sit')

    validateFilterResult(list, [], results)
  })

  it('should not return when does not contains', () => {
    const list = [{ sith: true }]
    const results = new FullStaticSearch(list).filter('jedi')

    validateFilterResult(list, [], results)
  })

  it('should not return when is different', () => {
    const list = [{ sith: true }]
    const results = new FullStaticSearch(list).filter('!sith')

    validateFilterResult(list, [], results)
  })

  it('should return only first result', () => {
    const list = [
      { sith: false },
      { sith: true }
    ]
    const results = new FullStaticSearch(list).filter('!sith')

    validateFilterResult(list, [0], results)
  })

  it('should return only second result', () => {
    const list = [
      { sith: false },
      { sith: true }
    ]
    const results = new FullStaticSearch(list).filter('sith')

    validateFilterResult(list, [1], results)
  })

  it('should not return results', () => {
    const list = [
      { sith: false },
      { sith: true }
    ]
    const results = new FullStaticSearch(list).filter('jedi')

    validateFilterResult(list, [], results)
  })

  it('should return both - match and match', () => {
    const list = [
      { sith: false },
      { sith: false }
    ]
    const results = new FullStaticSearch(list).filter('!sith')

    validateFilterResult(list, [0, 1], results)
  })

  it('should not return when is different', () => {
    const list = [
      { sith: false },
      { sith: false }
    ]
    const results = new FullStaticSearch(list).filter('sith')

    validateFilterResult(list, [], results)
  })
})