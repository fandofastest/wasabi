import validateFilterResult from '../_helper/validateFilterResult'
import FullStaticSearch from '../../src/FullStaticSearch'

describe('filter.number', () => {
  it('should return when match', () => {
    const list = [{ age: 123 }]
    const results = new FullStaticSearch(list).filter('123')

    validateFilterResult(list, [0], results)
  })

  it('should return when match', () => {
    const list = [{ age: 123 }]
    const results = new FullStaticSearch(list).filter('age=123')

    validateFilterResult(list, [0], results)
  })

  it('should not return when contains', () => {
    const list = [{ age: 123 }]
    const results = new FullStaticSearch(list).filter('12')

    validateFilterResult(list, [], results)
  })

  it('should not return when contains', () => {
    const list = [{ age: 123 }]
    const results = new FullStaticSearch(list).filter('age=12')

    validateFilterResult(list, [], results)
  })

  it('should not return when contains', () => {
    const list = [{ age: 123 }]
    const results = new FullStaticSearch(list).filter('sith')

    validateFilterResult(list, [], results)
  })

  it('should return only first result', () => {
    const list = [
      { age: 476 },
      { age: 90 }
    ]
    const results = new FullStaticSearch(list).filter('476')

    validateFilterResult(list, [0], results)
  })

  it('should return only first result', () => {
    const list = [
      { age: 476 },
      { age: 90 }
    ]
    const results = new FullStaticSearch(list).filter('age=476')

    validateFilterResult(list, [0], results)
  })

  it('should return only second result', () => {
    const list = [
      { age: 476 },
      { age: 90 }
    ]
    const results = new FullStaticSearch(list).filter('90')

    validateFilterResult(list, [1], results)
  })

  it('should return only second result', () => {
    const list = [
      { age: 476 },
      { age: 90 }
    ]
    const results = new FullStaticSearch(list).filter('age=90')

    validateFilterResult(list, [1], results)
  })

  it('should not return results', () => {
    const list = [
      { age: 476 },
      { age: 90 }
    ]
    const results = new FullStaticSearch(list).filter('5')

    validateFilterResult(list, [], results)
  })

  it('should not return results', () => {
    const list = [
      { age: 476 },
      { age: 90 }
    ]
    const results = new FullStaticSearch(list).filter('age=5')

    validateFilterResult(list, [], results)
  })

  it('should return only second result', () => {
    const list = [
      { age: 54 },
      { count: 54 }
    ]
    const results = new FullStaticSearch(list).filter('count=54')

    validateFilterResult(list, [1], results)
  })

  it('should return only second result', () => {
    const list = [
      { age: 54 },
      { count: 54 }
    ]
    const results = new FullStaticSearch(list).filter('age=54')

    validateFilterResult(list, [0], results)
  })
})